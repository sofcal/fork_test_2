# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

variables:
  outputPath: build/

trigger:
- "*"

pool:
  vmImage: 'Ubuntu-16.04'

steps:
# installs node version 8.
- task: NodeTool@0
  inputs:
    versionSpec: '8.x'
  displayName: 'Install Node.js'

# This task is implicit in build pipelines, but by making it explicit we can ensure we persist the git credentials for
#  the remainder of the job
- checkout: self
  clean: true # in case this build machine is being reused
  submodules: true
  persistCredentials: true # store the credentials for the rest of this job

# The checkout task ensures we have credentials, but it also checks us out at a specific commit, which leaves us in a
#  detached head state
- task: CmdLine@2
  inputs:
    script: 'git fetch && git checkout $(Build.SourceBranchName)'
  displayName: 'Update and pull branch: $(Build.SourceBranchName)'

- task: Npm@1
  inputs:
    command: 'custom'
    customCommand: run prepenv
    customRegistry: 'useNpmrc'
    customEndpoint: npm_repos
  displayName: 'prepenv'

- task: Npm@1
  inputs:
    command: 'custom'
    customCommand: run build
    customRegistry: 'useNpmrc'
    customEndpoint: npm_repos
  displayName: 'build'

- task: CmdLine@2
  inputs:
    script: 'git update-index --assume-unchanged .npmrc'
  displayName: 'ignore .npmrc change'

- task: Npm@1
  inputs:
    command: 'custom'
    customCommand: run release:ci
    customRegistry: 'useNpmrc'
    customEndpoint: npm_repos
  displayName: 'publish'

- task: PublishPipelineArtifact@0
  displayName: 'copy build output'
  inputs:
    artifactName: 'LambdaFunctions'
    targetPath: '$(outputPath)'
